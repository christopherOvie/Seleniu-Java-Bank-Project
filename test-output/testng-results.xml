<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-03-05T02:17:37 GMT" name="Default suite" finished-at="2024-03-05T02:18:37 GMT" duration-ms="60702">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.Runner5@6caf0677]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2024-03-05T02:17:37 GMT" name="Default test" finished-at="2024-03-05T02:18:37 GMT" duration-ms="60702">
      <class name="tests.Runner5">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:tests.Runner5@6caf0677]" started-at="2024-03-05T02:17:37 GMT" name="setUpClass" finished-at="2024-03-05T02:17:38 GMT" duration-ms="1090" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@29d3d0fb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.Runner5@6caf0677]" started-at="2024-03-05T02:17:38 GMT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-03-05T02:17:50 GMT" duration-ms="12187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["login page positive test"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["login for old user"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.Runner5@6caf0677]" started-at="2024-03-05T02:17:50 GMT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-03-05T02:17:52 GMT" duration-ms="2037" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["login page title test"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["login page"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.Runner5@6caf0677]" started-at="2024-03-05T02:17:52 GMT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-03-05T02:17:54 GMT" duration-ms="2008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["login page fields test"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["login page"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.Runner5@6caf0677]" started-at="2024-03-05T02:17:54 GMT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-03-05T02:18:01 GMT" duration-ms="7494" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["login page positive test"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["login for old user"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.Runner5@6caf0677]" started-at="2024-03-05T02:18:01 GMT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-03-05T02:18:09 GMT" duration-ms="7517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["login page positive test"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["login for old user"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.Runner5@6caf0677]" started-at="2024-03-05T02:18:09 GMT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-03-05T02:18:16 GMT" duration-ms="7465" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Data table data along with examples data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["login for old user"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.Runner5@6caf0677]" started-at="2024-03-05T02:18:16 GMT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-03-05T02:18:27 GMT" duration-ms="10791" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Data table data along with examples data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["login for old user"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.Runner5@6caf0677]" started-at="2024-03-05T02:18:27 GMT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-03-05T02:18:37 GMT" duration-ms="9587" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Data table data along with examples data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["login for old user"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.Runner5@6caf0677]" started-at="2024-03-05T02:18:37 GMT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-03-05T02:18:37 GMT" duration-ms="7" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["login for old user"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createTestCase(ExtentCucumberAdapter.java:424)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:163)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:tests.Runner5@6caf0677]" started-at="2024-03-05T02:18:37 GMT" name="tearDownClass" finished-at="2024-03-05T02:18:37 GMT" duration-ms="465" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- tests.Runner5 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
